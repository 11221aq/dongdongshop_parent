spring:
  cloud:
    gateway:
      # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true # 服务名称转成小写
      routes:
        - id: dongdongshop-login-service #路由的id 一般是服务名
          uri: lb://dongdongshop-login-service
          predicates:
            - Path=/login/**   # 如果有多个controller就配置多个，如果匹配所有路径那就/**
            # - Query=username #匹配请求的参数必须包含 username
            # - Method=get #必须为get请求
            #  - After=2022-03-17T20:42:47.789-07:00[Asia/Shanghai] # 匹配Shanghai时间 2022年03月17号以后的请求
            # - Header=AuthToken  #匹配规则是请求头必须携带名字叫AuthToken的值才可以访问
            # - RemoteAddr=10.112.3.147,192.168.56.1,192.168.142.1 # 只允许访问此ip才可以访问到
        - id: dongdongshop-goods-service #路由的id 一般是服务名
          uri: lb://dongdongshop-goods-service
          predicates:
            - Path=/brand/**,/spec/**,/type/**,/item/**  # 如果有多个controller就配置多个，如果匹配所有路径那就/**
        - id: dongdongshop-seller-service #路由的id 一般是服务名
          uri: lb://dongdongshop-seller-service
          predicates:
            - Path=/seller/**   # 如果有多个controller就配置多个，如果匹配所有路径那就/**
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':  #拦截的请求
            allowedOrigins: #允许跨域的请求
              - "*"
            allowedMethods: #运行跨域的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" #允许请求中携带的头信息
            allowedCredentials: true
            maxAge: 36000
# 自定义放过路径
gateway:
  exclusions:
    url: /login/**